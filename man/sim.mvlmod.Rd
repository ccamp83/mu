% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim.mvlmod.r
\name{sim.mvlmod}
\alias{sim.mvlmod}
\title{Simulate data according to a specific multivariate linear model}
\usage{
sim.mvlmod(dv.n, iv.lev, formula = "full", is.iv.factor,
  repetitions = 1, B = NULL, e.sd = NULL, dv.orthogonal = T,
  seed = NA, dv.min = -Inf, dv.max = Inf, ...)
}
\arguments{
\item{dv.n}{# of dependent variables}

\item{iv.lev}{can be either a vector or a list. If a vector, it must be of length equal to the # of independent variables, where each value in the vector specifies the # of levels of each iv. If a list, it must have an equal amount of items to the # of ind vars, where each item is a vector of length equal to the levels of that particular ind var. List helps particularly in case of numeric ind vars.}

\item{formula}{optional. A specific model can be called. The function implements the full model by default (main effects of all iv plus all their interactions). Valid entries are "full" (default) or any formula in the form compatible to R.}

\item{is.iv.factor}{logical vector of length iv.len. Each value specifies whether an iv must be treated as factor (true) or numerical (false)}

\item{repetitions}{# of repetitions. Must be > 0 (default to 1).}

\item{B}{matrix of coefficients of the linear model. If not input by user (default), a random matrix is generated from a unifom distribution within the range [0, 100] according to the model's formula}

\item{e.sd}{vector of standard deviations of residuals. Must have the same length of dv.n. If not input by user (default), a random vector is generated from a unifom distribution within the range [0, 25]}

\item{dv.orthogonal}{logical. If true the correlation matrix is an identity matrix of dimension dv.n-by-dv.n. Default to TRUE.}

\item{seed}{allows to input a specific seed for reproducibility. If NA, a random seed is generated}

\item{dv.min}{set an inferior limit for the dependent variable (for now limited to one boundary that will affect all dependent variables)}

\item{dv.max}{set an superior limit for the dependent variable (for now limited to one boundary that will affect all dependent variables)}
}
\value{
A list with the following items:

IV a list with the independent variables

R  the correlation matrix

X  the regressors matrix

B  the coefficients matrix

E  the errors matrix

Y  the complete dataset generated by the function

formula  the formula used to generate the dataset

seed the seed used for the generation of the data
}
\description{
Simulate data according to a specific multivariate linear model
}
\examples{
### Example 1
libraries()
dv.n.t <- 2
repetitions.t <- 5
iv.lev.t <- c(2, 2)
is.iv.factor.t <- c(T,T)
B.t <- matrix(c(30, 10, -5, 0, 300, 0, 100, -20), ncol=2)
e.sd.t <- c(10, 10)

test <- sim.mvlmod(dv.n.t, iv.lev.t, is.iv.factor=is.iv.factor.t, repetitions=repetitions.t, B=B.t, e.sd=e.sd.t, dv.orthogonal=T)
test

### Example 2
# des.exp can be used to help the construction of sim.mvlmod
libraries()
dv.n.t <- 2
repetitions.t <- 2
iv.lev.t <- list("V1" = c(30,40), "V2" = c(0:1), "V3" = c(100, 200)) # custom levels of the iv
is.iv.factor.t <- c(T,F,F)
formula.t <- ~ V1+V2+V3 # custom formula
seed.t <- 123456
(exp.des <- des.exp(dv.n.t, iv.lev.t, formula.t, is.iv.factor=is.iv.factor.t)) # check the design
# note IV1 and remember that IV2 is numeric
exp <- sim.mvlmod(dv.n.t, iv.lev.t, formula.t, is.iv.factor=is.iv.factor.t, repetitions=repetitions.t, seed=seed.t)
(Ydata <- exp$Y)


}
